name: Composite migration watch action
description: Login as the specified role and watch the migration until completion

inputs:
  aws-role-to-assume:
    description: "AWS Role to assume to start/stop the DB"
    required: true
  aws-region:
    description: "AWS Region for for the deployment"
    required: true

runs:
  using: composite
  steps:
    # Need to re-log as the terraform role because the deploy-infra step logs in as the terraform USER.
    - name: Configure AWS Credentials to assume terraform Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-role-to-assume }}
        role-session-name: GitHub_Action_deploy_migration
        aws-region: ${{ inputs.aws-region }}
        role-duration-seconds: 18000 # assume the role for 5 hours, so the migrations polling works

    - name: Wait for migration to be done
      shell: bash
      run: |
        until aws logs tail '/ecs/migrate' | grep -Fq "migrations applied successfully"
        do
          echo "waiting for Migrations to be applied $(date -u +%H:%M:%S) (UTC)"
          sleep 30
        done
        aws logs tail '/ecs/migrate'
        if aws logs tail '/ecs/migrate' | grep -Fq "migrations applied successfully"
        then
          # command succeeded
          echo '# Migrations done with success' >> $GITHUB_STEP_SUMMARY
        else
          # command failed
          echo '# Migrations failed' >> $GITHUB_STEP_SUMMARY
        fi
