name: Composite cdktf workflow
description: Runs a plan or deploy action for terraform cdktf

inputs:
  isActive:
    description: "Whether the env should be deployed in an active or inactive state"
    required: true
    default: "true"

runs:
  using: composite
  steps:
    - uses: hashicorp/setup-terraform@v3

    - uses: actions/setup-node@v4
      with:
        node-version: "22"

    - name: Install dependencies
      run: yarn install
      shell: bash

    - name: Generate module and provider bindings
      run: npx cdktf get
      shell: bash

    - name: Configure AWS Credentials
      id: configure-aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.TF_AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.TF_SECRET_AWS_ACCESS_KEY }}
        aws-region: eu-central-2 # not really important because it is reconfigured by Terraform

    - name: plan
      run: npx cdktf plan graasp-${{ inputs.environment }}
      shell: bash
      env:
        TF_VAR_STATE_IS_ACTIVE: ${{ inputs.isActive }}
        TF_VAR_MEILISEARCH_MASTER_KEY: ${{ secrets.TF_MEILISEARCH_MASTER_KEY }}
        TF_VAR_GRAASP_DB_PASSWORD: ${{ secrets.TF_GRAASP_DB_PASSWORD }}
        TF_VAR_ETHERPAD_DB_PASSWORD: ${{ secrets.TF_ETHERPAD_DB_PASSWORD }}
        TF_VAR_UMAMI_DB_PASSWORD: ${{ secrets.TF_VAR_UMAMI_DB_PASSWORD }}
        TF_VAR_GRAASP_DB_GATEKEEPER_KEY_NAME: ${{ secrets.TF_GRAASP_DB_GATEKEEPER_KEY_NAME }}
        TF_VAR_DB_GATEKEEPER_AMI_ID: ${{ vars.TF_DB_GATEKEEPER_AMI_ID }}
        TF_VAR_DB_GATEKEEPER_INSTANCE_TYPE: ${{ vars.TF_DB_GATEKEEPER_INSTANCE_TYPE }}

    # deploy: run: npx cdktf deploy --auto-approve 'graasp-${{ inputs.environment }}'
    # with the same variables
