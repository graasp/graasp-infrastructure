name: Start infra
on:
  schedule:
    - cron: "30 6 * * 1-5"
  # allow to start infra of another env manually
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        type: environment
        required: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  deploy:
    name: "Deploy infra in running state to ${{ inputs.environment || 'dev' }} environment"
    environment: ${{ inputs.environment || 'dev' }}
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy Infra
        uses: ./.github/actions/deploy-infra
        with:
          state: "running"
          environment: ${{ inputs.environment || 'dev' }}
          aws-role-to-assume: ${{ secrets.TF_AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.TF_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.TF_SECRET_AWS_ACCESS_KEY }}
          maintenance-header-name: ${{ secrets.MAINTENANCE_HEADER_NAME }}
          maintenance-header-secret: ${{ secrets.MAINTENANCE_HEADER_SECRET }}
          meilisearch-master-key: ${{ secrets.TF_MEILISEARCH_MASTER_KEY }}
          graasp-db-password: ${{ secrets.TF_GRAASP_DB_PASSWORD }}
          etherpad-db-password: ${{ secrets.TF_ETHERPAD_DB_PASSWORD }}
          umami-db-password: ${{ secrets.TF_VAR_UMAMI_DB_PASSWORD }}
          graasp-db-gatekeeper-key-name: ${{ secrets.TF_GRAASP_DB_GATEKEEPER_KEY_NAME }}
          graasper-id: ${{ vars.TF_VAR_GRAASPER_ID }}
          gatekeeper-ami-id: ${{ vars.TF_DB_GATEKEEPER_AMI_ID }}
          gatekeeper-instance-type: ${{ vars.TF_DB_GATEKEEPER_INSTANCE_TYPE }}
